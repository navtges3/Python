# .cursorrules
# This file provides project-specific guidelines for Cursor AI's code generation.
# Adjust these sections to match your project's needs.

[General]
# Basic project context for the AI.
project_name = "Pygame RPG"
project_description = "A turn-based RPG built in Python using Pygame with a focus on modular design, clarity, and robustness."

[Language]
# Preferred programming language and version.
language = "Python"
version = "3.9+"
coding_style = "PEP8"
indentation = "4 spaces"
line_length = 80

[Typing]
# Encourage the use of type hints throughout the code.
use_type_hints = true
typing_convention = "mypy-friendly static typing"

[CodeStructure]
# Guidelines for organizing code.
modular_design = true
organization = "Separate modules for game logic, UI, assets, and utility functions"
import_order = "stdlib, third-party libraries, local modules"

[CommentsAndDocs]
# Rules for inline comments and documentation.
docstrings_style = "Google or reStructuredText"
docstrings_required = true
inline_comments = "Use sparingly for non-obvious code segments"

[BestPractices]
# Core programming conventions.
error_handling = "Use specific exceptions and proper try/except blocks"
logging = "Utilize the Python logging module for runtime messages"
test_framework = "pytest"  ; Prefer pytest for unit and integration tests.
performance = "Prioritize readability and correctness over premature optimization"

[CursorAIBehavior]
# Directives for Cursor AI to influence code suggestions.
start_response_with = "Summary context: Briefly explain the function or module purpose before code generation."
avoid = ["excess verbosity", "over-engineered designs"]
focus_on = ["readability", "clarity", "maintainability"]
preferences = "Favor modular functions and clear separation of concerns"

[AdditionalGuidelines]
# Any project-specific patterns or conventions can be added here.
common_patterns = "Adopt design patterns where appropriate (e.g., Factory, Singleton for game managers)"
reuse_code = true  ; Encourage the extraction of reusable components.